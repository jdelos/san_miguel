---
// Simple Cookie Consent Component
---

<div id="cookie-consent-banner" class="cookie-consent-banner">
  <div class="cookie-consent-content">
    <div class="cookie-consent-text">
      <h3 class="cookie-consent-title">
        üç™ Utilizamos cookies
      </h3>
      <p class="cookie-consent-description">
        Utilizamos cookies para mejorar su experiencia y analizar el uso del sitio. 
        Puede gestionar sus preferencias en cualquier momento.
      </p>
    </div>
    <div class="cookie-consent-actions">
      <button id="accept-all-cookies" class="cookie-btn cookie-btn-primary">
        Aceptar todas
      </button>
      <button id="accept-necessary-cookies" class="cookie-btn cookie-btn-secondary">
        Solo necesarias
      </button>
      <button id="show-cookie-preferences" class="cookie-btn cookie-btn-text">
        Personalizar
      </button>
    </div>
  </div>
</div>

<div id="cookie-preferences-modal" class="cookie-preferences-modal hidden">
  <div class="cookie-preferences-content">
    <div class="cookie-preferences-header">
      <h3 class="cookie-preferences-title">Preferencias de cookies</h3>
      <button id="close-preferences" class="cookie-close-btn">‚úï</button>
    </div>
    <div class="cookie-preferences-body">
      <p class="cookie-preferences-description">
        Elija qu√© tipos de cookies desea permitir. Puede cambiar estas configuraciones en cualquier momento.
      </p>
      
      <div class="cookie-category">
        <div class="cookie-category-header">
          <div class="cookie-category-info">
            <span class="cookie-category-name">Cookies necesarias</span>
            <span class="cookie-category-badge">Siempre activas</span>
          </div>
          <div class="cookie-toggle cookie-toggle-disabled">
            <span class="cookie-toggle-slider"></span>
          </div>
        </div>
        <p class="cookie-category-description">
          Esenciales para el funcionamiento b√°sico del sitio web.
        </p>
      </div>
      
      <div class="cookie-category">
        <div class="cookie-category-header">
          <div class="cookie-category-info">
            <span class="cookie-category-name">Cookies de an√°lisis</span>
          </div>
          <div id="analytics-toggle" class="cookie-toggle">
            <span class="cookie-toggle-slider"></span>
          </div>
        </div>
        <p class="cookie-category-description">
          Nos ayudan a entender c√≥mo usa el sitio para mejorarlo.
        </p>
      </div>
    </div>
    <div class="cookie-preferences-footer">
      <button id="save-preferences" class="cookie-btn cookie-btn-primary">
        Guardar preferencias
      </button>
      <button id="accept-all-preferences" class="cookie-btn cookie-btn-secondary">
        Aceptar todas
      </button>
    </div>
  </div>
</div>

<style>
  .cookie-consent-banner {
    position: fixed;
    bottom: 20px;
    right: 20px;
    max-width: 400px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
    padding: 24px;
    z-index: 1000;
    border: 1px solid #e2e8f0;
    transform: translateY(100px);
    opacity: 0;
    transition: all 0.3s ease-out;
  }
  
  .cookie-consent-banner.show {
    transform: translateY(0);
    opacity: 1;
  }
  
  .cookie-consent-title {
    font-size: 18px;
    font-weight: 700;
    color: #1f2937;
    margin: 0 0 8px 0;
    line-height: 1.3;
  }
  
  .cookie-consent-description {
    font-size: 14px;
    color: #64748b;
    line-height: 1.5;
    margin: 0 0 20px 0;
  }
  
  .cookie-consent-actions {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }
  
  .cookie-btn {
    border: none;
    border-radius: 8px;
    font-weight: 600;
    font-size: 14px;
    padding: 12px 20px;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 44px;
  }
  
  .cookie-btn-primary {
    background: #EE2D2E;
    color: white;
  }
  
  .cookie-btn-primary:hover {
    background: #D11B1C;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(238, 45, 46, 0.3);
  }
  
  .cookie-btn-secondary {
    background: #f8fafc;
    color: #475569;
    border: 1px solid #cbd5e1;
  }
  
  .cookie-btn-secondary:hover {
    background: #e2e8f0;
    border-color: #94a3b8;
    transform: translateY(-1px);
  }
  
  .cookie-btn-text {
    background: transparent;
    color: #64748b;
    font-size: 12px;
    padding: 8px 16px;
    min-height: 32px;
  }
  
  .cookie-btn-text:hover {
    color: #1f2937;
    background: #f1f5f9;
  }
  
  .cookie-preferences-modal {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1001;
    padding: 16px;
  }
  
  .cookie-preferences-modal.hidden {
    display: none;
  }
  
  .cookie-preferences-content {
    background: white;
    border-radius: 12px;
    max-width: 500px;
    width: 100%;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  }
  
  .cookie-preferences-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 24px 24px 16px;
    border-bottom: 1px solid #e2e8f0;
  }
  
  .cookie-preferences-title {
    font-size: 18px;
    font-weight: 700;
    color: #1f2937;
    margin: 0;
  }
  
  .cookie-close-btn {
    background: none;
    border: none;
    font-size: 18px;
    color: #64748b;
    cursor: pointer;
    padding: 4px;
    border-radius: 4px;
    transition: all 0.2s ease;
  }
  
  .cookie-close-btn:hover {
    background: #f1f5f9;
    color: #1f2937;
  }
  
  .cookie-preferences-body {
    padding: 16px 24px;
  }
  
  .cookie-preferences-description {
    font-size: 14px;
    color: #64748b;
    margin: 0 0 20px 0;
    line-height: 1.5;
  }
  
  .cookie-category {
    margin-bottom: 16px;
    padding: 16px;
    background: #f8fafc;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
  }
  
  .cookie-category-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 8px;
  }
  
  .cookie-category-info {
    display: flex;
    align-items: center;
    gap: 8px;
  }
  
  .cookie-category-name {
    font-weight: 600;
    color: #1f2937;
  }
  
  .cookie-category-badge {
    background: #e2e8f0;
    color: #64748b;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: 500;
  }
  
  .cookie-category-description {
    font-size: 14px;
    color: #64748b;
    margin: 0;
    line-height: 1.4;
  }
  
  .cookie-toggle {
    width: 48px;
    height: 24px;
    background: #cbd5e1;
    border-radius: 12px;
    position: relative;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .cookie-toggle.active {
    background: #EE2D2E;
  }
  
  .cookie-toggle-disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background: #e2e8f0;
  }
  
  .cookie-toggle-slider {
    position: absolute;
    top: 2px;
    left: 2px;
    width: 20px;
    height: 20px;
    background: white;
    border-radius: 50%;
    transition: all 0.2s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }
  
  .cookie-toggle.active .cookie-toggle-slider {
    transform: translateX(24px);
  }
  
  .cookie-preferences-footer {
    padding: 16px 24px 24px;
    border-top: 1px solid #e2e8f0;
    display: flex;
    gap: 12px;
  }
  
  .cookie-preferences-footer .cookie-btn {
    flex: 1;
  }
  
  /* Mobile responsive */
  @media (max-width: 640px) {
    .cookie-consent-banner {
      right: 16px;
      bottom: 16px;
      left: 16px;
      max-width: none;
    }
    
    .cookie-preferences-content {
      margin: 16px;
    }
    
    .cookie-preferences-footer {
      flex-direction: column;
    }
  }
</style>

<script>
  // Make function available immediately
  window.showCookiePreferences = function() {
    // If modal isn't ready yet, wait a bit
    const modal = document.getElementById('cookie-preferences-modal');
    if (modal) {
      modal.classList.remove('hidden');
      // Load current preferences
      const currentChoice = localStorage.getItem('hospital-cookie-consent');
      const analyticsToggle = document.getElementById('analytics-toggle');
      if (currentChoice && (currentChoice.includes('analytics') || currentChoice === 'all')) {
        analyticsToggle && analyticsToggle.classList.add('active');
      } else {
        analyticsToggle && analyticsToggle.classList.remove('active');
      }
    } else {
      // Fallback: Clear storage and reload
      localStorage.removeItem('hospital-cookie-consent');
      window.location.reload();
    }
  };

  document.addEventListener('DOMContentLoaded', function() {
    const banner = document.getElementById('cookie-consent-banner');
    const modal = document.getElementById('cookie-preferences-modal');
    const analyticsToggle = document.getElementById('analytics-toggle');
    let analyticsEnabled = false;
    
    // Check if user has already made a choice
    const cookieChoice = localStorage.getItem('hospital-cookie-consent');
    if (!cookieChoice) {
      setTimeout(() => {
        banner.classList.add('show');
      }, 500);
    }
    
    // Accept all cookies
    document.getElementById('accept-all-cookies').addEventListener('click', function() {
      analyticsEnabled = true;
      saveCookieChoice('all');
      enableAnalytics(true);
      hideBanner();
    });
    
    // Accept only necessary cookies
    document.getElementById('accept-necessary-cookies').addEventListener('click', function() {
      analyticsEnabled = false;
      saveCookieChoice('necessary');
      enableAnalytics(false);
      hideBanner();
    });
    
    // Show preferences modal
    document.getElementById('show-cookie-preferences').addEventListener('click', function() {
      modal.classList.remove('hidden');
    });
    
    // Close preferences modal
    document.getElementById('close-preferences').addEventListener('click', function() {
      modal.classList.add('hidden');
    });
    
    // Toggle analytics
    analyticsToggle.addEventListener('click', function() {
      analyticsEnabled = !analyticsEnabled;
      updateToggleState();
    });
    
    // Save preferences
    document.getElementById('save-preferences').addEventListener('click', function() {
      const choice = analyticsEnabled ? 'custom-analytics' : 'custom-necessary';
      saveCookieChoice(choice);
      enableAnalytics(analyticsEnabled);
      hideBanner();
      modal.classList.add('hidden');
    });
    
    // Accept all from preferences
    document.getElementById('accept-all-preferences').addEventListener('click', function() {
      analyticsEnabled = true;
      updateToggleState();
      saveCookieChoice('all');
      enableAnalytics(true);
      hideBanner();
      modal.classList.add('hidden');
    });
    
    // Close modal on backdrop click
    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        modal.classList.add('hidden');
      }
    });
    
    function updateToggleState() {
      if (analyticsEnabled) {
        analyticsToggle.classList.add('active');
      } else {
        analyticsToggle.classList.remove('active');
      }
    }
    
    function saveCookieChoice(choice) {
      localStorage.setItem('hospital-cookie-consent', choice);
      localStorage.setItem('hospital-cookie-timestamp', Date.now());
    }
    
    function hideBanner() {
      banner.classList.remove('show');
      setTimeout(() => {
        banner.style.display = 'none';
      }, 300);
    }
    
    function enableAnalytics(enabled) {
      if (window.gtag) {
        window.gtag('consent', 'update', {
          analytics_storage: enabled ? 'granted' : 'denied',
          ad_storage: 'denied'
        });
      }
      console.log('Analytics:', enabled ? 'enabled' : 'disabled');
    }
    
    // Update the global function to use the local variables
    window.showCookiePreferences = function() {
      // Show the preferences modal directly
      modal.classList.remove('hidden');
      // Load current preferences
      const currentChoice = localStorage.getItem('hospital-cookie-consent');
      if (currentChoice && (currentChoice.includes('analytics') || currentChoice === 'all')) {
        analyticsEnabled = true;
        updateToggleState();
      } else {
        analyticsEnabled = false;
        updateToggleState();
      }
    };
    
    // Initialize toggle state
    updateToggleState();
  });
</script>
