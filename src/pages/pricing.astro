---
import Layout from "@/layouts/Layout.astro";
import Container from "@/components/container.astro";
import Sectionhead from "@/components/sectionhead.astro";
import PricingCard from "@/components/pricing.astro";
import HospitalGallery from "@/components/HospitalGallery.astro";
import { getEntry } from 'astro:content';

// Fetch pricing data from Keystatic
let pricingContent;
try {
  pricingContent = await getEntry('pricing', 'index');
} catch (error) {
  console.warn('Pricing content not found in Keystatic, using defaults');
}

// Default pricing data based on the document
const defaultPricingData = {
  heroTitle: "Servicios médicos y tarifas",
  heroDescription: "Trabajamos con voluntarios de varios países, incluyendo los Países Bajos. Por eso, es posible que la atención sea brindada por personal médico extranjero. La atención brindada es en español.",
  pricingCards: [
    {
      name: "Consulta General",
      price: "$5.00 | 20.000 pesos",
      features: [
        "Examen físico completo",
        "Diagnóstico profesional",
        "Atención médica integral",
        "Todas las edades"
      ],
      buttonText: "Agendar Cita",
      buttonLink: "/contact"
    },
    {
      name: "Consulta Niño",
      price: "$2.50 | 10.000 pesos",
      features: [
        "Atención pediátrica especializada",
        "Cuidado adaptado a niños",
        "Ambiente cómodo y seguro",
        "Seguimiento del desarrollo"
      ],
      buttonText: "Agendar Cita",
      buttonLink: "/contact"
    },
    {
      name: "Consulta Embarazada",
      price: "$2.50 | 10.000 pesos",
      features: [
        "Control prenatal",
        "Seguimiento del embarazo",
        "Atención especializada",
        "Cuidado madre-bebé"
      ],
      buttonText: "Agendar Cita",
      buttonLink: "/contact"
    },
    {
      name: "Consulta de Emergencia",
      price: "$15 | 60.000 pesos",
      features: [
        "Atención 24/7",
        "Respuesta inmediata",
        "Equipo especializado",
        "Disponible toda la semana"
      ],
      buttonText: "Llamar Emergencia",
      buttonLink: "tel:+593-xxx-xxxx"
    },
    {
      name: "Hospitalización",
      price: "$15 | 60.000 pesos por noche",
      features: [
        "Atención 24/7",
        "Camas cómodas",
        "Monitoreo continuo",
        "Cuidados especializados"
      ],
      buttonText: "Consultar",
      buttonLink: "/contact"
    }
  ],
  additionalServicesTitle: "Servicios Adicionales",
  laboratoryTitle: "Laboratorio",
  laboratoryDescription: "Ofrecemos pruebas de orina, heces y sangre.",
  radiologyTitle: "Radiología",
  radiologyDescription: "Ofrecemos radiografías y ecografías.",
  priceDisclaimer: "*En general, como somos una organización sin fines de lucro, tratamos de mantener los precios bajos. Esto aplica solo a servicios con indicación médica, determinada por nuestros propios médicos. Para estudios solicitados por cuenta propia, se aplican tarifas comerciales más altas."
};

// Use Keystatic data if available, otherwise use defaults
const data = pricingContent?.data || defaultPricingData;

// Transform pricing cards for the pricing component
const pricingCards = data.pricingCards?.map(card => ({
  ...card,
  button: {
    text: card.buttonText,
    link: card.buttonLink
  }
})) || [];
---

<Layout>
  <Container>
    <Sectionhead>
      <Fragment slot="title">{data.heroTitle}</Fragment>
      <Fragment slot="desc">{data.heroDescription}</Fragment>
    </Sectionhead>
    
    <!-- Pricing Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mt-10 max-w-4xl mx-auto">
      {pricingCards.map((card, index) => (
        <PricingCard key={index} plan={card} />
      ))}
    </div>

    <!-- Pricing Table from Keystatic -->
    {data.showPricingTable && (
      <div class="mt-16 max-w-6xl mx-auto">
        <div class="bg-white rounded-lg shadow-lg overflow-hidden">
          <div class="bg-gradient-to-r from-blue-500 to-blue-600 px-6 py-4">
            <h3 class="text-xl font-semibold text-white">{data.pricingTableTitle}</h3>
          </div>
          <div class="overflow-x-auto">
            <table class="w-full">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Servicio</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Precio USD</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Precio COP</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Disponibilidad</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                {pricingCards.map((card) => (
                  <tr class={`hover:bg-gray-50 ${card.isEmergency ? 'bg-red-50' : ''}`}>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{card.name}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-semibold">{card.priceUSD || card.price.split(' | ')[0]}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-semibold">{card.priceCOP || card.price.split(' | ')[1]}</td>
                    <td class={`px-6 py-4 whitespace-nowrap text-sm ${card.isEmergency ? 'text-red-600 font-medium' : 'text-gray-500'}`}>{card.availability || 'Horario regular'}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    )}


  <HospitalGallery />

    <!-- Price Disclaimer -->
    <div class="mt-16 max-w-4xl mx-auto">
      <div class="p-6 bg-blue-50 border border-blue-200 rounded-lg">
        <p class="text-gray-700 text-sm leading-relaxed">
          {data.priceDisclaimer}
        </p>
      </div>
    </div>
  </Container>
</Layout>

